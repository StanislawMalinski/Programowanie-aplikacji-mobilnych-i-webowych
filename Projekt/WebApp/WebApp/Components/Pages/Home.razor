@page "/forface/main/{page:int?}"
@using Newtonsoft.Json;
@using Microsoft.Extensions.Configuration;
@using System.Collections.Generic;
@using WebApp.Components.Services;
@using WebApp.Components;
@using WebApp.Models;
@inject NavigationManager NavigationManager
@inject IClientPost postClient;
@inject IClientUserProfile userClient;
@inject IClientComment commentClient;
@inject UserContext user;
@inject ILanguageService lang;

<PageTitle>@lang.GetPhrase("forFace")</PageTitle>

<h1>@lang.GetPhrase("helloOnForface")</h1>


@if (posts == null)
{
    <img src="Bean Eater-1s-200px.svg" alt="@lang.GetPhrase("loadingAnimation")">
}
else
{
    @foreach (var post in posts)
    {
        <div class="post">
            <a href="/forface/@post.User.Id">
                <div class="post-author">
                    <h3 class="author-nick">@post.User.UserName</h3>
                </div>
            </a>
            <div class="post-content">
                <h3 class="post-title">@post.Title</h3>
                <p class="created-date">@post.CreatedAt</p>
                <p class="post-body">@post.Content</p>
            </div>
            <div class="post-buttons">
                <div class="post-button">
                    <a href="/forface/delete/@post.Id">
                        <button class="post-button">@lang.GetPhrase("delete")</button>
                    </a>
                </div>
                <div class="post-button">
                    <a href="/forface/edit/@post.Id">
                        <button class="post-button">@lang.GetPhrase("edit")</button>
                    </a>
                </div>     
                <div class="post-button">
                    <a href="/forface/post/@post.Id"> 
                        <button class="post-button">@lang.GetPhrase("comments")</button>
                    </a>
                </div>
            </div>
        </div>
    }
}

@if(maxPage > 2)
{
    <div class="pagination">
        <div class="pagination-button">
            <a href="/forface/main/@(page - 1)">
                <button class="page-button" disabled="@(page == 1)">@lang.GetPhrase("previous")</button>
            </a>
        </div>

        <div class="pagination-button">
            <a href="/forface/main/@(page + 1)">
                <button class="page-button" disabled="@(page == maxPage)" >@lang.GetPhrase("next")</button>
            </a>
        </div>
    </div>
}

<p>Current Page: @(page)</p>

@code {
    private List<Post>? posts;
    [Parameter]
    public int page { get; set; }
    private int maxPage;

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    protected async Task Reload()
    {
        page = page == 0 ? 1 : page;
        posts = null;
        StateHasChanged();
        await Task.Delay(2000);
        posts = await postClient.GetPosts(page);
        maxPage = await postClient.GetMaxPage();
    }
}