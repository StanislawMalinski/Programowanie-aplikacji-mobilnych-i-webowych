@page "/forface/{id:int}"
@using Models;
@using Services;
@inject NavigationManager NavigationManager
@inject IClientPost postClient;
@inject IClientUserProfile UserClient;
@inject UserContext user;

<h3>My Profile</h3>

@if (user != null)
{
    <div class="row">
        <div class="col-md-8">
            <h4>@user.UserName</h4>
            <p>@user.Bio</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            @if (posts != null)
            {
                <h4>My Posts</h4>
                foreach (var post in posts)
                {
                    <div class="post">
                        <div class="post-content">
                            <h3 class="post-title">@post.Title</h3>
                            <p class="created-date">@post.CreatedAt</p>
                            <p class="post-body">@post.Content</p>
                        </div>
                        <div class="post-buttons">
                            <button class="post-button" @onclick="() => DeletePost(post.Id)">Delete</button>
                            <button class="post-button" @onclick="() => EditPost(post.Id)">Edit</button>
                            <button class="post-button" @onclick="() => GoToComments(post.Id)">Comments</button>
                        </div>
                    </div>

                }
            } else
            {
                <p>No posts yet...</p>
            }
        </div>
    </div>
}
else
{
    <p>Not logged in</p>
}

@code {
    [Parameter]
    public int id { get; set; }
    private List<Post> posts;
    private int page = 1;
    private UserPorfile userProfile;
    protected override async Task OnInitializedAsync()
    {
        userProfile = await UserClient.GetUserProfile(id.ToString());
        posts = await postClient.GetPostsForUserProfiles(user.Id, page);
    }

    protected async Task DeletePost(int id)
    {
        NavigationManager.NavigateTo("/forface/delete/" + id.ToString());
    }

    protected async Task EditPost(int id)
    {
        NavigationManager.NavigateTo("/forface/edit/" + id.ToString());
    }

    protected async Task GoToComments(int id)
    {
        NavigationManager.NavigateTo("/forface/post/" + id.ToString());
    }
}
